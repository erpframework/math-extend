#labels Featured
= math-extend =

Welcome to the documentation of math-extend. Here you will find all you need to use it.



== Math native object extensions ==

*Math.sum*
{{{
Math.sum(Array) -> Number
}}}
Returns the sum of an array of numbers. Gets an array of numbers, and returns a number.
----

*Math.mean*
{{{
Math.mean(Array) -> Number
}}}
Returns the mean value of an array of numbers. Gets an array of numbers, and returns a number.
----

*Math.median*
{{{
Math.median(Array) -> Number
}}}
Returns the median value of an array of numbers. Gets an array of numbers, and returns a number.
----

*Math.stdDev*
{{{
Math.stdDev(Array) -> Number
}}}
Returns the standard deviation value of an array of numbers. Gets an array of numbers, and returns a number.
----

*Math.baseLog*
{{{
Math.baseLog(Number [, Base = 10]) -> Number
}}}
Returns the log(Number) with a given base. Default base is 10 if omitted.
----

*Math.factorize*
{{{
Math.factorize(Number) -> Array
}}}
Returns the unique prime factorization of a Number. Gets a positive integer, and returns an array of prime numbers.
----

== Number native class extensions ==

*isEven*
{{{
isEven() -> Boolean
}}}
Returns true if Number is even, false otherwise.
----

*isOdd*
{{{
isOdd() -> Boolean
}}}
Returns true if Number is odd, false otherwise.
----

*isInteger*
{{{
isInteger([ excludeZero = false ]) -> Boolean
}}}
Returns true if Number is an integer, false otherwise.
If optional parameter excludeZero is set to true, test with number zero(0) will return false.
----

*isNatural*
{{{
isNatural([ excludeZero = false ]) -> Boolean
}}}
Returns true if Number is an integer greater than or equal to zero, false otherwise.
If optional parameter excludeZero is set to true, test with number zero(0) will return false.
----

*isPrime*
{{{
isPrime() -> Boolean
}}}
Returns true if Number is a prime, false otherwise. If tested number is greater than 1e+16, test will always return false because of javascript limitations(tested on Firefox 3.x).

----

== Array native class extensions ==


*swap*
{{{
swap(firstIndex, secondIndex) -> Array
}}}
Swaps 2 elements inside an array. Returns the modified array.
----

*shuffle*
{{{
shuffle() -> Array
}}}
Shuffles an array. Returns the modified array.
----